version: "3.8"

x-build-args: &build_args
  INSTALL_PYTHON_VERSION: "3.12"
  INSTALL_NODE_VERSION: "20"

x-default-volumes: &default_volumes
  volumes:
    - ./:/app
    - node-modules:/app/node_modules
    - ./dev.db:/tmp/dev.db

x-logging: &default-logging
  logging:
    driver: json-file
    options:
      max-size: 100M

services:
  flask-dev:
    container_name: flask-dev
    build:
      context: .
      target: development
      args:
        <<: *build_args
    image: "online_compiler-development"
    ports:
      - "8080:5000"
      - "2992:2992"
    <<: *default_volumes

  judge0-server:
    image: judge0/judge0:latest
    volumes:
      - ./judge0.conf:/judge0.conf:ro
    ports:
      - "2358:2358"
    privileged: true
    <<: *default-logging
    restart: always

  judge0-worker:
    image: judge0/judge0:latest
    command: ["./scripts/workers"]
    volumes:
      - ./judge0.conf:/judge0.conf:ro
    privileged: true
    <<: *default-logging
    restart: always

  db:
    image: postgres:16.2
    env_file: judge0.conf
    volumes:
      - data:/var/lib/postgresql/data/
    <<: *default-logging
    restart: always

  redis:
    image: redis:7.2.4
    command:
      [
        "bash",
        "-c",
        'docker-entrypoint.sh --appendonly no --requirepass "$$REDIS_PASSWORD"',
      ]
    env_file: judge0.conf
    <<: *default-logging
    restart: always

  flask-prod:
    container_name: flask-prod
    build:
      context: .
      target: production
      args:
        <<: *build_args
    image: "online_compiler-production"
    ports:
      - "8080:5000"
    environment:
      FLASK_ENV: production
      FLASK_DEBUG: 0
      LOG_LEVEL: info
      GUNICORN_WORKERS: 4
    <<: *default_volumes

  manage:
    build:
      context: .
      target: development
      args:
        <<: *build_args
    entrypoint: flask
    environment:
      FLASK_ENV: production
      FLASK_DEBUG: 0
    image: "online_compiler-manage"
    stdin_open: true
    tty: true
    <<: *default_volumes

volumes:
  node-modules:
  data:
